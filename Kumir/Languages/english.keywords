# Syntax:
#
# CONTEXT = KEYWORDS
# KEYWORDS = VARIANT1 [ |VARIANT2 [ ... |VARIANTn ] ]
#
begin module = module
end module = end_module|end\s+module
use module = use
algorhitm header = algorhitm
begin algorhitm implementation = begin
end algorhitm implementation = end
algorhitm pre-condition = pre
algorhitm post-condition = post
assertion = assert
begin loop = do
end loop = end_do|end\s+do
conditional end loop = end_do_if|end\s+do\s+if
'for' loop type = for
'times' loop type = times
'while' loop type = while
for loop 'from' = from
for loop 'to' = to
for loop 'step' = step
loop break and algorhitm return = exit
if = if
then = then
else = else
end of 'if' or 'switch' statement = done
switch = switch
case = case
terminal input = scan
terminal output = print
file input = f_scan
file output = f_print
new line symbol = endl
logical 'not' = not
logical 'and' = and
logical 'or' = or
'write only' parameter modifier = write
'read only' parameter modifier = read
'read and write' parameter modifier = read\s*write
'true' constant value = true
'false' constant value = false
integer type name = int
floating point type name = real
character type name = char
string type name = string
boolean type name = bool
integer array type name = int\s*array
floating point array type name = real\s*array
character array type name = char\s*array
string array type name = string\s*array
boolean array type name = bool\s*array
include text = include
