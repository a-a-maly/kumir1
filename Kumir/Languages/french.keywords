# Syntax:
#
# CONTEXT = KEYWORDS
# KEYWORDS = VARIANT1 [ |VARIANT2 [ ... |VARIANTn ] ]
#
begin module = module
end module = module_fin|module\s+fin
use module = utilisation
algorhitm header = algorhitm
begin algorhitm implementation = commencer
end algorhitm implementation = fin
algorhitm pre-condition = pré
algorhitm post-condition = poste
assertion = affirmer
begin loop = boucle
end loop = boucle_fin|boucle\s+fin
conditional end loop = boucle_fin_si|boucle\s+fin\s+si
'for' loop type = pour
'times' loop type = fois
'while' loop type = while
for loop 'from' = de
for loop 'to' = à
for loop 'step' = étape
loop break and algorhitm return = étape
if = si
then = puis
else = dautre
end of 'if' or 'switch' statement = fait
switch = sélectionner
case = cas
terminal input = balayage
terminal output = imprimer
file input = f_balayage
file output = f_imprimer
new line symbol = fl
logical 'not' = pas
logical 'and' = et
logical 'or' = ou
'write only' parameter modifier = écrire
'read only' parameter modifier = lire
'read and write' parameter modifier = lire\s*écrire
'true' constant value = vrai
'false' constant value = faux
integer type name = entier
floating point type name = écrire
character type name = écrire
string type name = chaîne
boolean type name = booléen
integer array type name = entier\s+tableau
floating point array type name = écrire\s+tableau
character array type name = écrire\s+tableau
string array type name = chaîne\s+tableau
boolean array type name = booléen\s+tableau
include file = inclusion
